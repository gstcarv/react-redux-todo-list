{"version":3,"sources":["components/NewTodo/index.js","store/actions/todo.js","components/TodosTable/index.js","components/CompletedTodos/index.js","components/DeletedTodos/index.js","pages/Todos/index.js","components/Navbar/index.js","store/reducers/todo.js","store/reducers/index.js","store/index.js","pages/index.js","index.js"],"names":["connect","dispatch","editingTodo","setEditingTodo","useState","todoTitle","setTodoTitle","updateTodo","editedTodo","title","type","todo","id","TodoActions","useEffect","Form","onSubmit","e","preventDefault","length","Row","Col","sm","className","Control","value","placeholder","onChange","nativeEvent","target","Button","disabled","block","variant","onClick","icon","faCheck","faTimes","state","todos","filter","t","deleted","completeTodo","todoID","isTodoDisabled","completed","Table","striped","bordered","hover","colSpan","map","key","style","textDecoration","opacity","pointerEvents","faTrash","faPen","faUndo","completedTodos","Jumbotron","deletedTodos","faTrashRestore","cursor","Container","fluid","AppNavbar","Navbar","bg","Brand","href","faGithub","fontSize","INITIAL_STATE","lastIndex","reducer","action","combineReducers","createStore","rootReducer","App","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c937f1e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles.css'\r\n\r\nimport { connect } from 'react-redux'\r\nimport * as TodoActions from '../../store/actions/todo'\r\n\r\nimport { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\n\r\nfunction NewTodo({ dispatch, editingTodo, setEditingTodo }) {\r\n\r\n  const [todoTitle, setTodoTitle] = useState('')\r\n\r\n  useEffect(() => {\r\n    if (editingTodo) {\r\n      setTodoTitle(editingTodo.title)\r\n    } else {\r\n      setTodoTitle(\"\")\r\n    }\r\n  }, [editingTodo])\r\n\r\n  function addTodo(e) {\r\n    e.preventDefault()\r\n    if (todoTitle.length >= 3) {\r\n      if (!editingTodo) {\r\n        dispatch(TodoActions.addTodo(todoTitle))\r\n        setTodoTitle('')\r\n      } else {\r\n        updateTodo()\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateTodo() {\r\n    const editedTodo = {\r\n      ...editingTodo,\r\n      title: todoTitle\r\n    }\r\n    dispatch(TodoActions.editTodo(editedTodo))\r\n    setEditingTodo(null)\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={addTodo}>\r\n      <Form.Row>\r\n        <Col sm={9} className=\"pb-2\">\r\n          <Form.Control\r\n            type=\"text\"\r\n            value={todoTitle}\r\n            placeholder=\"Type the todos's title here\"\r\n            onChange={({ nativeEvent }) => setTodoTitle(nativeEvent.target.value)}\r\n          />\r\n        </Col>\r\n        <Col sm={3}>\r\n\r\n          {!editingTodo &&\r\n            <Button\r\n              disabled={todoTitle.length < 3}\r\n              type=\"submit\"\r\n              block\r\n              variant=\"dark\">ADD\r\n          </Button>}\r\n\r\n          {editingTodo &&\r\n            <Form.Row>\r\n              <Col>\r\n                <Button\r\n                  disabled={todoTitle.length < 3}\r\n                  block\r\n                  variant=\"outline-success\"\r\n                  onClick={updateTodo}>\r\n                  <FontAwesomeIcon icon={faCheck} />\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  block\r\n                  variant=\"outline-danger\"\r\n                  onClick={() => setEditingTodo(null)}>\r\n                  <FontAwesomeIcon icon={faTimes} />\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>}\r\n\r\n        </Col>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default connect()(NewTodo)","export function addTodo(todoTitle){\r\n  return {\r\n    type: \"ADD_TODO\",\r\n    todoTitle\r\n  }\r\n}\r\n\r\nexport function deleteTodo(todoID){\r\n  return {\r\n    type: \"DELETE_TODO\",\r\n    todoID\r\n  }\r\n}\r\n\r\nexport function restoreTodo(todoID){\r\n  return {\r\n    type: 'RESTORE_TODO',\r\n    todoID\r\n  }\r\n}\r\n\r\nexport function completeTodo(todoID){\r\n  return {\r\n    type: 'COMPLETE_TODO',\r\n    todoID\r\n  }\r\n}\r\n\r\nexport function reloadTodo(todoID){\r\n  return {\r\n    type: 'RELOAD_TODO',\r\n    todoID\r\n  }\r\n}\r\n\r\nexport function editTodo({ id, title }){\r\n  return {\r\n    type: 'EDIT_TODO',\r\n    todo: { id, title }\r\n  }\r\n}","import React from 'react';\r\nimport './styles.css'\r\n\r\nimport { connect } from 'react-redux';\r\nimport * as TodoActions from '../../store/actions/todo'\r\n\r\nimport { Table } from 'react-bootstrap'\r\n\r\nimport { faTrash, faPen, faCheck, faUndo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nfunction TodosTable({ todos, dispatch, setEditingTodo, editingTodo }) {\r\n\r\n  function deleteTodo(todoID) {\r\n    setEditingTodo(null)\r\n    dispatch(TodoActions.deleteTodo(todoID))\r\n  }\r\n\r\n  function completeTodo(todoID) {\r\n    dispatch(TodoActions.completeTodo(todoID))\r\n  }\r\n\r\n  function reloadTodo(todoID) {\r\n    dispatch(TodoActions.reloadTodo(todoID))\r\n  }\r\n\r\n  const isTodoDisabled = todo => {\r\n    if (todo.completed) {\r\n      return true\r\n    } else {\r\n      if (editingTodo) {\r\n        if (editingTodo.id != todo.id) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  return (\r\n    <Table striped bordered hover className=\"todos-table mt-2\">\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th className=\"title-col\">Todo Title</th>\r\n          <th colSpan=\"3\">Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n\r\n        {todos.map(({ id, title, completed }) => (\r\n          <tr key={id} style={{\r\n            textDecoration: completed ? 'line-through' : 'initial',\r\n            opacity: isTodoDisabled({ id, completed }) ? .2 : 1,\r\n            pointerEvents: isTodoDisabled({ id, completeTodo }) ? 'none' : 'initial'\r\n          }}>\r\n\r\n            <td>{id}</td>\r\n            <td>{title}</td>\r\n\r\n            {\r\n              !completed &&\r\n              <>\r\n                <td className=\"text-center text-danger\" onClick={() => deleteTodo(id)}>\r\n                  <FontAwesomeIcon icon={faTrash} />\r\n                </td>\r\n                <td className=\"text-center text-info\" onClick={() => setEditingTodo({ id, title })}\r\n                  colSpan={(!editingTodo || editingTodo.id != id) ? 1 : 2}>\r\n                  <FontAwesomeIcon icon={faPen} />\r\n                </td>\r\n\r\n                {(!editingTodo || editingTodo.id != id) &&\r\n                  <td className=\"text-center text-success\"\r\n                    onClick={() => completeTodo(id)}>\r\n                    <FontAwesomeIcon icon={faCheck} />\r\n                  </td>}\r\n\r\n              </>\r\n            }\r\n\r\n            {\r\n              completed &&\r\n              <td colSpan=\"3\" className=\"text-center text-info\" onClick={() => reloadTodo(id)}>\r\n                <FontAwesomeIcon icon={faUndo} />\r\n              </td>\r\n            }\r\n\r\n          </tr>\r\n        ))}\r\n\r\n        {todos.length == 0 &&\r\n          <tr>\r\n            <td colSpan=\"5\" className=\"text-center\">Nothing here. Add your first todo!</td>\r\n          </tr>}\r\n\r\n      </tbody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: state.todo.todos.filter(t => !t.deleted)\r\n});\r\n\r\nexport default connect(mapStateToProps)(TodosTable);\r\n","import React from 'react';\r\nimport './styles.css'\r\n\r\nimport { connect } from 'react-redux'\r\n\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport { Jumbotron } from 'react-bootstrap'\r\n\r\nconst CompletedTodos = ({ completedTodos }) => (\r\n  <Jumbotron>\r\n    <h6 className=\"text-success\">Completed Todos</h6>\r\n    {completedTodos.length == 0 && <p>Nothing here</p>}\r\n    <ul className=\"completed-todos-list\">\r\n      {completedTodos.map(todo => (\r\n        <li key={todo.id}>\r\n          <FontAwesomeIcon\r\n            icon={faCheck}\r\n            className=\"text-secondary mr-3\"\r\n          />\r\n          {todo.title}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </Jumbotron>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  completedTodos: state.todo.todos.filter(t => t.completed)\r\n});\r\n\r\nexport default connect(mapStateToProps)(CompletedTodos);\r\n","import React from 'react';\r\nimport './styles.css'\r\n\r\nimport { Jumbotron } from 'react-bootstrap'\r\n\r\nimport { connect } from 'react-redux'\r\nimport * as TodoActions from '../../store/actions/todo'\r\n\r\nimport { faTrashRestore } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nfunction DeletedTodos({ deletedTodos, dispatch }) {\r\n\r\n  function restoreTodo(todoID){\r\n    dispatch(TodoActions.restoreTodo(todoID))\r\n  }\r\n\r\n  return (\r\n    <Jumbotron>\r\n      <h6 className=\"text-danger\">Deleted Todos</h6>\r\n      {deletedTodos.length == 0 && <p>Nothing here</p>}\r\n      <ul className=\"deleted-todos-list\">\r\n        {deletedTodos.map(todo => (\r\n          <li key={todo.id}>\r\n            {todo.title}\r\n            <FontAwesomeIcon\r\n              icon={faTrashRestore}\r\n              className=\"float-right text-secondary\"\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={() => restoreTodo(todo.id)}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Jumbotron>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  deletedTodos: state.todo.todos.filter(t => t.deleted)\r\n});\r\n\r\nexport default connect(mapStateToProps)(DeletedTodos);\r\n","import React, { useState } from 'react';\r\nimport './styles.css'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nimport NewTodo from '../../components/NewTodo'\r\nimport TodosTable from '../../components/TodosTable';\r\nimport CompletedTodos from '../../components/CompletedTodos';\r\nimport DeletedTodos from '../../components/DeletedTodos';\r\n\r\nfunction Todos() {\r\n\r\n  const [editingTodo, setEditingTodo] = useState(null)\r\n\r\n  return (\r\n    <Container fluid className=\"p-3\">\r\n      <Row>\r\n        <Col sm={7}>\r\n          <h4>{ !editingTodo ? \"Add new Todo\" : \"Edit Todo\" }</h4>\r\n          <NewTodo\r\n            editingTodo={editingTodo}\r\n            setEditingTodo={setEditingTodo}\r\n          />\r\n          <TodosTable\r\n            editingTodo={editingTodo}\r\n            setEditingTodo={setEditingTodo}\r\n          />\r\n        </Col>\r\n        <Col sm={5}>\r\n          <CompletedTodos />\r\n          <DeletedTodos />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default connect()(Todos);\r\n","import React from 'react';\r\n\r\nimport { Navbar } from 'react-bootstrap'\r\n\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst AppNavbar = () => (\r\n  <Navbar bg=\"dark\">\r\n    <Navbar.Brand className=\"text-white\">Todo List</Navbar.Brand>\r\n    <a href=\"https://github.com/gstcarv/react-redux-todo-list\" target=\"_blank\" className=\"ml-auto\">\r\n      <FontAwesomeIcon icon={faGithub} className=\"text-white\" style={{ fontSize: 30 }}/>\r\n    </a>\r\n  </Navbar>\r\n);\r\n\r\nexport default AppNavbar;\r\n","const INITIAL_STATE = {\r\n  lastIndex: 0,\r\n  todos: []\r\n}\r\n\r\nfunction reducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    // Adicionar a Todo\r\n    case 'ADD_TODO': {\r\n      return {\r\n        lastIndex: ++state.lastIndex,\r\n        todos: [\r\n          ...state.todos,\r\n          {\r\n            id: state.lastIndex,\r\n            title: action.todoTitle,\r\n            deleted: false,\r\n            completed: false\r\n          }\r\n        ]\r\n      }\r\n    }\r\n    // Deleta a Todo\r\n    case 'DELETE_TODO': {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(t => {\r\n          if (t.id == action.todoID)\r\n            t.deleted = true\r\n          return t\r\n        })\r\n      }\r\n    }\r\n    // Restaura a Todo\r\n    case 'RESTORE_TODO': {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(t => {\r\n          if (t.id == action.todoID)\r\n            t.deleted = false\r\n          return t\r\n        })\r\n      }\r\n    }\r\n    // Completa a Todo\r\n    case 'COMPLETE_TODO': {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(t => {\r\n          if (t.id == action.todoID)\r\n            t.completed = true\r\n          return t\r\n        })\r\n      }\r\n    }\r\n    // Reload na Todo\r\n    case 'RELOAD_TODO': {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(t => {\r\n          if (t.id == action.todoID)\r\n            t.completed = false\r\n          return t\r\n        })\r\n      }\r\n    }\r\n    // Editar a Todo\r\n    case 'EDIT_TODO': {\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(t => {\r\n          if (t.id == action.todo.id)\r\n            t = { ...t, title: action.todo.title }\r\n          return t\r\n        })\r\n      }\r\n    }\r\n  }\r\n  return state\r\n}\r\n\r\nexport default reducer","import { combineReducers } from 'redux'\r\n\r\nimport todo from './todo'\r\n\r\nexport default combineReducers({ todo })","import { createStore } from 'redux'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nexport default createStore(rootReducer)","import React from 'react';\r\n\r\nimport Todos from './Todos'\r\nimport AppNavbar from '../components/Navbar'\r\nimport { Provider as ReduxProvider } from 'react-redux'\r\nimport store from '../store'\r\n\r\nconst App = () => (\r\n  <ReduxProvider store={store}>\r\n    <AppNavbar />\r\n    <Todos />\r\n  </ReduxProvider>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-svg-core'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}